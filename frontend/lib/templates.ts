import { ParameterType, OptimizationType, ConstraintType } from "@/lib/types"

export const parameterTemplates = [
  {
    id: "temperature",
    name: "Temperature",
    type: ParameterType.CONTINUOUS,
    min: 25,
    max: 100,
    unit: "°C",
    description: "Reaction or process temperature",
  },
  {
    id: "pressure",
    name: "Pressure",
    type: ParameterType.CONTINUOUS,
    min: 1,
    max: 10,
    unit: "bar",
    description: "System pressure",
  },
  {
    id: "time",
    name: "Reaction Time",
    type: ParameterType.CONTINUOUS,
    min: 1,
    max: 120,
    unit: "min",
    description: "Duration of the reaction or process",
  },
  {
    id: "ph",
    name: "pH",
    type: ParameterType.CONTINUOUS,
    min: 1,
    max: 14,
    unit: "",
    description: "Acidity/alkalinity of the solution",
  },
  {
    id: "concentration",
    name: "Concentration",
    type: ParameterType.CONTINUOUS,
    min: 0.01,
    max: 1,
    unit: "mol/L",
    description: "Concentration of a reagent or solution",
  },
  {
    id: "catalyst_loading",
    name: "Catalyst Loading",
    type: ParameterType.CONTINUOUS,
    min: 0.1,
    max: 10,
    unit: "mol%",
    description: "Amount of catalyst relative to substrate",
  },
  {
    id: "metal_fraction",
    name: "Metal Fraction",
    type: ParameterType.CONTINUOUS,
    min: 0,
    max: 1,
    unit: "",
    description: "Fraction of a metal component in an alloy or mixture",
  },
  {
    id: "voltage",
    name: "Voltage",
    type: ParameterType.CONTINUOUS,
    min: 0.1,
    max: 5,
    unit: "V",
    description: "Applied voltage in an electrochemical process",
  },
  {
    id: "current_density",
    name: "Current Density",
    type: ParameterType.CONTINUOUS,
    min: 1,
    max: 100,
    unit: "mA/cm²",
    description: "Current per unit area in an electrochemical process",
  },
  {
    id: "stirring_rate",
    name: "Stirring Rate",
    type: ParameterType.CONTINUOUS,
    min: 100,
    max: 1000,
    unit: "rpm",
    description: "Speed of stirring or agitation",
  },
  {
    id: "flow_rate",
    name: "Flow Rate",
    type: ParameterType.CONTINUOUS,
    min: 0.1,
    max: 10,
    unit: "mL/min",
    description: "Rate of fluid flow in a continuous process",
  },
  {
    id: "annealing_cycles",
    name: "Annealing Cycles",
    type: ParameterType.DISCRETE,
    min: 1,
    max: 10,
    step: 1,
    unit: "cycles",
    description: "Number of heating/cooling cycles",
  },
  {
    id: "catalyst_type",
    name: "Catalyst Type",
    type: ParameterType.CATEGORICAL,
    values: ["Pt", "Pd", "Rh", "Ru", "Ni", "Fe", "Co"],
    description: "Type of catalyst used in the reaction",
  },
  {
    id: "solvent",
    name: "Solvent",
    type: ParameterType.CATEGORICAL,
    values: ["Water", "Methanol", "Ethanol", "Acetone", "THF", "DMF", "DMSO", "Toluene"],
    description: "Solvent used in the reaction or process",
  },
  {
    id: "support_material",
    name: "Support Material",
    type: ParameterType.CATEGORICAL,
    values: ["Carbon", "Alumina", "Silica", "Titania", "Zeolite", "MOF"],
    description: "Material used to support the catalyst",
  },
]

export const objectiveTemplates = [
  {
    id: "yield",
    name: "Yield",
    type: OptimizationType.MAXIMIZE,
    description: "Percentage of theoretical maximum product obtained",
    unit: "%",
  },
  {
    id: "selectivity",
    name: "Selectivity",
    type: OptimizationType.MAXIMIZE,
    description: "Ratio of desired product to total products",
    unit: "%",
  },
  {
    id: "conversion",
    name: "Conversion",
    type: OptimizationType.MAXIMIZE,
    description: "Percentage of reactant converted",
    unit: "%",
  },
  {
    id: "activity",
    name: "Activity",
    type: OptimizationType.MAXIMIZE,
    description: "Rate of reaction or turnover frequency",
    unit: "mol/(g·h)",
  },
  {
    id: "stability",
    name: "Stability",
    type: OptimizationType.MAXIMIZE,
    description: "Catalyst or material stability over time",
    unit: "h",
  },
  {
    id: "energy_efficiency",
    name: "Energy Efficiency",
    type: OptimizationType.MAXIMIZE,
    description: "Ratio of useful energy output to energy input",
    unit: "%",
  },
  {
    id: "faradaic_efficiency",
    name: "Faradaic Efficiency",
    type: OptimizationType.MAXIMIZE,
    description: "Efficiency of charge transfer in electrochemical processes",
    unit: "%",
  },
  {
    id: "oer",
    name: "Oxygen Evolution Reaction (OER)",
    type: OptimizationType.MAXIMIZE,
    description: "Rate of oxygen evolution in electrocatalysis",
    unit: "mA/cm²",
  },
  {
    id: "her",
    name: "Hydrogen Evolution Reaction (HER)",
    type: OptimizationType.MAXIMIZE,
    description: "Rate of hydrogen evolution in electrocatalysis",
    unit: "mA/cm²",
  },
  {
    id: "overpotential",
    name: "Overpotential",
    type: OptimizationType.MINIMIZE,
    description: "Additional potential needed to drive an electrochemical reaction",
    unit: "V",
  },
  {
    id: "bandgap",
    name: "Bandgap",
    type: OptimizationType.TARGET_RANGE,
    targetMin: 1.5,
    targetMax: 2.5,
    description: "Energy difference between valence and conduction bands",
    unit: "eV",
  },
  {
    id: "particle_size",
    name: "Particle Size",
    type: OptimizationType.TARGET_RANGE,
    targetMin: 5,
    targetMax: 20,
    description: "Size of particles or crystallites",
    unit: "nm",
  },
  {
    id: "cost",
    name: "Cost",
    type: OptimizationType.MINIMIZE,
    description: "Economic cost of the process or materials",
    unit: "$/g",
  },
  {
    id: "toxicity",
    name: "Toxicity",
    type: OptimizationType.MINIMIZE,
    description: "Measure of harmful effects on organisms or environment",
    unit: "mg/L",
  },
]

export const constraintTemplates = [
  {
    id: "sum_equals_one",
    name: "Sum Equals One",
    type: ConstraintType.SUM_EQUALS,
    expression: "x1 + x2 + x3",
    value: 1,
    description: "Sum of parameters equals 1 (e.g., for fractions or compositions)",
  },
  {
    id: "sum_less_than",
    name: "Sum Less Than",
    type: ConstraintType.SUM_LESS_THAN,
    expression: "x1 + x2",
    value: 0.5,
    description: "Sum of parameters is less than a value",
  },
  {
    id: "sum_greater_than",
    name: "Sum Greater Than",
    type: ConstraintType.SUM_GREATER_THAN,
    expression: "x1 + x2",
    value: 0.5,
    description: "Sum of parameters is greater than a value",
  },
  {
    id: "ratio_constraint",
    name: "Ratio Constraint",
    type: ConstraintType.SUM_EQUALS,
    expression: "x1 / x2",
    value: 2,
    description: "Ratio between two parameters equals a specific value",
  },
  {
    id: "temperature_limit",
    name: "Temperature Limit",
    type: ConstraintType.SUM_LESS_THAN,
    expression: "temperature",
    value: 100,
    description: "Temperature should not exceed a maximum value (e.g., 100°C)",
  },
  {
    id: "minimum_concentration",
    name: "Minimum Concentration",
    type: ConstraintType.SUM_GREATER_THAN,
    expression: "concentration",
    value: 0.1,
    description: "Concentration should be above a minimum threshold",
  },
]

export const strategyTemplates = [
  {
    id: "lhs",
    name: "Latin Hypercube Sampling (LHS)",
    description: "Efficient space-filling design for initial exploration",
    recommendedFor: "Initial exploration with no prior data",
    sampleSize: "10-20 samples",
  },
  {
    id: "sobol",
    name: "Sobol Sequence",
    description: "Quasi-random sequence for uniform coverage of parameter space",
    recommendedFor: "Initial exploration with complex parameter interactions",
    sampleSize: "10-30 samples",
  },
  {
    id: "random",
    name: "Random Sampling",
    description: "Simple random sampling across the parameter space",
    recommendedFor: "Quick exploration or when other methods are too complex",
    sampleSize: "15-30 samples",
  },
  {
    id: "bo",
    name: "Bayesian Optimization",
    description: "Model-based optimization using surrogate models",
    recommendedFor: "Refinement after initial exploration, when some data exists",
    sampleSize: "5-10 samples per iteration",
  },
  {
    id: "bo_ei",
    name: "BO with Expected Improvement",
    description: "Balances exploration and exploitation",
    recommendedFor: "Standard optimization approach for most problems",
    sampleSize: "5-10 samples per iteration",
  },
  {
    id: "bo_ucb",
    name: "BO with Upper Confidence Bound",
    description: "More exploration-focused approach",
    recommendedFor: "Problems where exploration is important",
    sampleSize: "5-10 samples per iteration",
  },
  {
    id: "bo_noisy",
    name: "BO for Noisy Environments",
    description: "Handles experimental noise and uncertainty",
    recommendedFor: "Real-world experiments with measurement noise",
    sampleSize: "8-12 samples per iteration",
  },
  {
    id: "bo_multi",
    name: "Multi-Objective BO",
    description: "Optimizes multiple competing objectives simultaneously",
    recommendedFor: "Problems with multiple important KPIs",
    sampleSize: "10-15 samples per iteration",
  },
]
